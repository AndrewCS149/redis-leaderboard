@page "/"

@inject Interfaces.ILeaderboardEntryService _leaderboard

<PageTitle>Leader Board</PageTitle>

<EditForm Model=@newEntry OnValidSubmit=AddEntry>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value=newEntry.username placeholder="username" />
    <InputNumber @bind-Value=newEntry.score placeholder="score" />
    <button type="submit">Add Entry</button>
</EditForm>

@if (leaderboardEntries is not null)
{
    <table class="table table-striped">
        <thead>
            LEADERBOARD
        </thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">UserName</th>
            <th scope="col">Score</th>
        </tr>
        <tbody>
            @for (int i = 1; i <= leaderboardEntries.Count; i++)
            {
                <tr>
                    <th scope="row">@i</th>
                    <td>@leaderboardEntries[i - 1].username</td>
                    <td>@leaderboardEntries[i - 1].score</td>
                    <TrashIcon />
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<LeaderboardEntryModel> leaderboardEntries;
    private LeaderboardEntryModel newEntry = new LeaderboardEntryModel();

    protected override async Task OnInitializedAsync()
    {
        leaderboardEntries = await _leaderboard.GetLeaderboardEntries(leaderboardEntries);
    }

    private async Task AddEntry()
    {
        leaderboardEntries = await _leaderboard.AddLeaderboardEntry(newEntry);
    }
}

